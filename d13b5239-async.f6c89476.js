(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["d13b5239"],{d13b5239:function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return t;}}),d("01d2268f");let t=[{value:"Use Agent to manage conversation data and produce data for page rendering.",paraId:0,tocIndex:0},{value:"type useXChat<AgentMessage, ParsedMessage = AgentMessage> = (\n  config: XChatConfig<AgentMessage, ParsedMessage>,\n) => XChatConfigReturnType;\n",paraId:1,tocIndex:6},{value:"Property",paraId:2,tocIndex:7},{value:"Description",paraId:2,tocIndex:7},{value:"Type",paraId:2,tocIndex:7},{value:"Default",paraId:2,tocIndex:7},{value:"Version",paraId:2,tocIndex:7},{value:"agent",paraId:2,tocIndex:7},{value:"agent",paraId:2,tocIndex:7},{value:" parameter is required when using the ",paraId:2,tocIndex:7},{value:"onRequest",paraId:2,tocIndex:7},{value:" method in an agent generated by ",paraId:2,tocIndex:7},{value:"useXAgent",paraId:2,tocIndex:7},{value:".",paraId:2,tocIndex:7},{value:"XAgent",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"defaultMessages",paraId:2,tocIndex:7},{value:"default messages",paraId:2,tocIndex:7},{value:"{ status, message }[]",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"parser",paraId:2,tocIndex:7},{value:"Convert AgentMessage to ParsedMessage for consumption. If not set, AgentMessage will be consumed directly. Supports converting one AgentMessage to multiple ParsedMessages",paraId:2,tocIndex:7},{value:"(message: AgentMessage) => BubbleMessage | BubbleMessage[]",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"requestFallback",paraId:2,tocIndex:7},{value:"Fallback when request fails, not provided will not be displayed",paraId:2,tocIndex:7},{value:"AgentMessage | () => AgentMessage",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"requestPlaceholder",paraId:2,tocIndex:7},{value:"Show the placeholder information when requesting, not provided will not be displayed",paraId:2,tocIndex:7},{value:"AgentMessage | () => AgentMessage",paraId:2,tocIndex:7},{value:"-",paraId:2,tocIndex:7},{value:"Property",paraId:3,tocIndex:8},{value:"Description",paraId:3,tocIndex:8},{value:"Type",paraId:3,tocIndex:8},{value:"Version",paraId:3,tocIndex:8},{value:"messages",paraId:3,tocIndex:8},{value:"Current managed messages content",paraId:3,tocIndex:8},{value:"AgentMessages[]",paraId:3,tocIndex:8},{value:"parsedMessages",paraId:3,tocIndex:8},{value:"Parsed messages by ",paraId:3,tocIndex:8},{value:"parser",paraId:3,tocIndex:8},{value:" api",paraId:3,tocIndex:8},{value:"ParsedMessages[]",paraId:3,tocIndex:8},{value:"onRequest",paraId:3,tocIndex:8},{value:"Create a message and trigger a request",paraId:3,tocIndex:8},{value:"(message) => void",paraId:3,tocIndex:8},{value:"setMessages",paraId:3,tocIndex:8},{value:"Modify messages directly without triggering requests",paraId:3,tocIndex:8},{value:"(messages: { message, status }[]) => void",paraId:3,tocIndex:8}];}}]);
//# sourceMappingURL=d13b5239-async.f6c89476.js.map